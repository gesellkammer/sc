MIDIClient.init;
m = MIDIOut(0);

(
SynthDef(\pru) { |freq=440| 
     var delimiting_freqs = #[25,
              27.625     ,    29.26766798,    31.00801408,    32.85184655,
              34.805319  ,    36.87495097,    39.06764966,    41.390733  ,
              43.85195406,    46.45952694,    49.22215418,    52.14905578,
              55.25      ,    58.53533596,    62.01602817,    65.7036931 ,
              69.61063801,    73.74990194,    78.13529932,    82.781466  ,
              87.70390812,    92.91905389,    98.44430835,   104.29811155,
             110.5       ,   117.07067193,   124.03205634,   131.40738621,
             139.22127601,   147.49980389,   156.27059864,   165.56293199,
             175.40781624,   185.83810777,   196.88861671,   208.5962231 ,
             221.0       ,   234.14134385,   248.06411268,   262.81477242,
             278.44255203,   294.99960777,   312.54119728,   331.12586399,
             350.81563248,   371.67621554,   393.77723342,   417.19244621,
             442.0       ,   468.28268771,   496.12822535,   525.62954483,
             556.88510405,   589.99921554,   625.08239457,   662.25172798,
             701.63126497,   743.35243108,   787.55446684,   834.38489241,
             884.0       ,   936.56537541,   992.25645071,  1051.25908966,
            1113.77020811,  1179.99843109,  1250.16478914,  1324.50345596,
            1403.26252994,  1486.70486217,  1575.10893367,  1668.76978482,
            1768.0       ,  1873.13075083,  1984.51290141,  2102.51817932,
            2227.54041621,  2359.99686217,  2500.32957828,  2649.00691192,
            2806.52505988,  2973.40972434,  3150.21786734,  3337.53956964,
            3536.0       ,  3746.26150165,  3969.02580282,  4205.03635865, 4400];
	var in = SoundIn.ar(0); 
	//var in = SinOsc.ar(freq);
	var pitch, has_pitch, trig;
	var nfft = 8192;
	var fft_buf = LocalBuf(nfft);
	var chain0, chain1, powers;
	//# pitch, has_pitch = Tartini.kr(in);
	//trig = has_pitch * abs(pitch - LastValue.kr(pitch)) ;
	//SendReply.kr(has_pitch, 'pitch', [pitch]) ;
    FFT
	chain0 = FFT(fft_buf, in);
    //chain1 = PV_Copy(chain0, LocalBuf(nfft));
    //chain1 = chain1.pvcalc(nfft, 
    //    {|mags, phases|
    //        mags.size.postln;
    //    },
    //    frombin: 0, tobin: 2047, zeroothers:0
    //)
    powers = FFTSubbandPower.kr(chain0, delimiting_freqs, 0);
    trig = Impulse.kr(44100 / nfft*1.5);
    // resynth
    //SinOsc.ar(delimiting_freqs) * powers | Mix( _ ) | (_!2) | Out.ar(0, _);
    SendReply.kr(trig, '/powers', powers);
}.send;
);

a = Synth(\pru)
a.autogui
a.free       

0.01.reciprocal
(
d = 2;
r = OSCresponderNode(nil, '/powers', 
    {|time, responder, message|
        //'+++'.postln;
        var amp;
        var delimiting_freqs = #[25,
                  27.625     ,    29.26766798,    31.00801408,    32.85184655,
                  34.805319  ,    36.87495097,    39.06764966,    41.390733  ,
                  43.85195406,    46.45952694,    49.22215418,    52.14905578,
                  55.25      ,    58.53533596,    62.01602817,    65.7036931 ,
                  69.61063801,    73.74990194,    78.13529932,    82.781466  ,
                  87.70390812,    92.91905389,    98.44430835,   104.29811155,
                 110.5       ,   117.07067193,   124.03205634,   131.40738621,
                 139.22127601,   147.49980389,   156.27059864,   165.56293199,
                 175.40781624,   185.83810777,   196.88861671,   208.5962231 ,
                 221.0       ,   234.14134385,   248.06411268,   262.81477242,
                 278.44255203,   294.99960777,   312.54119728,   331.12586399,
                 350.81563248,   371.67621554,   393.77723342,   417.19244621,
                 442.0       ,   468.28268771,   496.12822535,   525.62954483,
                 556.88510405,   589.99921554,   625.08239457,   662.25172798,
                 701.63126497,   743.35243108,   787.55446684,   834.38489241,
                 884.0       ,   936.56537541,   992.25645071,  1051.25908966,
                1113.77020811,  1179.99843109,  1250.16478914,  1324.50345596,
                1403.26252994,  1486.70486217,  1575.10893367,  1668.76978482,
                1768.0       ,  1873.13075083,  1984.51290141,  2102.51817932,
                2227.54041621,  2359.99686217,  2500.32957828,  2649.00691192,
                2806.52505988,  2973.40972434,  3150.21786734,  3337.53956964,
                3536.0       ,  3746.26150165,  3969.02580282,  4205.03635865, 4400];
        
        var noteoffs = Array.new(88);
        var midinote;
        fork {
            87.do {|i| 
                //midinote = i + 19;
                midinote = delimiting_freqs[i+1].cpsmidi;
                amp = (message[i+4] * d * 127.0).clip(0, 127).asInteger;
                if( amp > 0 ) {
                    m.noteOn(0, midinote, amp);
                    noteoffs.add(midinote) 
                };
            };
        };
        
        fork {
            0.1.wait;
            if( noteoffs.size > 0 ) {
                noteoffs.do {|elem, i|
                    m.noteOff(0, elem, 0)
                };
            };
        };
       
    }
).add
)
d = 2
r.remove

a = [1,2,3,4,5]
a.at
31-12


Array

{
    10000.do{|i| i*i
        
    };
}.bench

f.def.sourceCode


{ for(0, 88, {|i| i.postln})}.def.dumpByteCodes


p = MidiPixelation()
b = Bus.audio()
c = Buffer.read(s, "/Users/edu/Desktop/neuhaus_s.wav")
a = { 
    var au = PlayBuf.ar(1, c.bufnum);
    au | Out.ar(b, _);
    au * 0.1 | Out.ar(0, _) }.play
a.free
a = { SoundIn.ar(2) | Out.ar(b, _)}.play
p.test_midi()
p.play(b)
p.stop
MIDIThruControl
p.responder.dump
p.synth
p.synth.dump
p.midi_gain = 1
p.dur = 0.3333
p.synth.set['trig_rate'] = 2.5